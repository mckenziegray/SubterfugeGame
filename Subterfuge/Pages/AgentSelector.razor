@page  "/selectagents"
@inject GameService Game

<div class="row justify-content-center">
    <div class="col center-contents-horizontal">
        <h2>Day @Game.Day</h2>
        <p>Select up to @GameService.MAX_AGENT_SELECTIONS @(GameService.MAX_AGENT_SELECTIONS == 1 ? "agent" : "agents") to assign.</p>

        @for (int i = 0; i < Game.Agents.Allies.Count; i++)
        {
            <div class="row justify-content-center">
                @{
                    Agent agent1 = Game.Agents.Allies[i];
                    bool disabled = !agent1.IsActing && NumSelected >= GameService.MAX_AGENT_SELECTIONS;
                }
                <div class="col-xs-6 col-sm-5 col-md-3 col-lg-2">
                    <AgentSelectButton Agent="agent1"
                                       OnChangeCallback="e => OnAgentCheckboxChanged(e, agent1)"
                                       Disabled="disabled" />
                </div>

                @if (++i < Game.Agents.Count)
                {
                    Agent agent2 = Game.Agents.Allies[i];
                    disabled = !agent2.IsActing && NumSelected >= GameService.MAX_AGENT_SELECTIONS;

                    <div class="col-xs-6 col-sm-5 col-md-3 col-lg-2">
                        <AgentSelectButton Agent="agent2"
                                           OnChangeCallback="e => OnAgentCheckboxChanged(e, agent2)"
                                           Disabled="disabled" />
                    </div>
                }
            </div>
        }

        <div class="row justify-content-center">
            <div class="col">
                <button class="btn btn-info" @onclick="Submit">Confirm</button>
            </div>
        </div>
    </div>
</div>

@code
{
    public int NumSelected => Game.Agents.Allies.Count(a => a.IsActing);

    protected void OnAgentCheckboxChanged(ChangeEventArgs e, Agent agent)
    {
        bool isChecked = (bool)e.Value;

        if (isChecked)
        {
            if (NumSelected < GameService.MAX_AGENT_SELECTIONS)
            {
                if (agent.RequiresTarget)
                    Nav.NavigateTo($"/selecttarget/{(int)agent.AgentType}");
                else
                    agent.IsActing = true;
            }
        }
        else
        {
            agent.Reset();
        }
    }

    protected void Submit()
    {
        Game.PlayRound();
        Nav.NavigateTo("/results");
    }
}
